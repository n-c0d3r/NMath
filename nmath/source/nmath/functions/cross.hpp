#pragma once

/** @file nmath/functions/cross.hpp
*
*   Implement cross.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/types/vector.hpp>
#include <nmath/types/quaternion.hpp>
#include <nmath/functions/data_functions.hpp>
#include <nmath/simd_helper.hpp>

#pragma endregion



namespace nmath {	
	
	////////////////////////////////////////////////////////////////////////////////////
	//  f32
	////////////////////////////////////////////////////////////////////////////////////
	NCPP_FORCE_INLINE float cross(PA_vector2_f32 a, PA_vector2_f32 b) noexcept {

		return data2_cross(data_forward(a), data_forward(b));
	}
	NCPP_FORCE_INLINE F_vector3_f32 NCPP_VECTOR_CALL cross(PA_vector3_f32 a, PA_vector3_f32 b) noexcept {

		return vector_forward(
			data3_cross(data_forward(a), data_forward(b))
		);
	}
	NCPP_FORCE_INLINE F_vector4_f32 NCPP_VECTOR_CALL cross(PA_vector4_f32 a, PA_vector4_f32 b, PA_vector4_f32 c) noexcept {

		return vector_forward(
			data4_cross(data_forward(a), data_forward(b), data_forward(c))
		);
	}
	NCPP_FORCE_INLINE F_quaternion_f32 NCPP_VECTOR_CALL cross(PA_quaternion_f32 a, PA_quaternion_f32 b, PA_quaternion_f32 c) noexcept {

		return quaternion_forward(
			data4_cross(data_forward(a), data_forward(b), data_forward(c))
		);
	}

}
