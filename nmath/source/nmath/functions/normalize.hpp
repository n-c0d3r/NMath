#pragma once

/** @file nmath/functions/normalize.hpp
*
*   Implement normalize.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/types/vector.hpp>
#include <nmath/types/quaternion.hpp>
#include <nmath/functions/length.hpp>
#include <nmath/functions/data_functions.hpp>
#include <nmath/operators/vector_scalar.hpp>
#include <nmath/operators/quaternion_scalar.hpp>

#pragma endregion



namespace nmath {

	////////////////////////////////////////////////////////////////////////////////////
	//  f32
	////////////////////////////////////////////////////////////////////////////////////
	NCPP_FORCE_INLINE F_vector2_f32 normalize(PA_vector2_f32 a) noexcept {

		return a / length(a);
	}
	NCPP_FORCE_INLINE F_vector3_f32 NMATH_CALL_CNV normalize(PA_vector3_f32 a) noexcept {

		return a / length(a);
	}
	NCPP_FORCE_INLINE F_vector4_f32 NMATH_CALL_CNV normalize(PA_vector4_f32 a) noexcept {

		return a / length(a);
	}
	NCPP_FORCE_INLINE F_quaternion_f32 NMATH_CALL_CNV normalize(PA_quaternion_f32 a) noexcept {

		return a / length(a);
	}

}
