#pragma once

/** @file nmath/operators/quaternion_matrix.hpp
*
*   Implement operators between quaternion and matrix.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/types/quaternion.hpp>
#include <nmath/types/matrix.hpp>
#include <nmath/functions/data4_functions.hpp>
#include <nmath/functions/data4x4_functions.hpp>
#include <nmath/functions/conjugate.hpp>
#include <nmath/functions/matrix_invert.hpp>
#include <nmath/operators/helper.hpp>
#include <nmath/operators/quaternion_vector.hpp>

#pragma endregion



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////
//  f32
////////////////////////////////////////////////////////////////////////////////////
namespace nmath {

    NCPP_FORCE_INLINE F_matrix2x2_f32 NMATH_CALL_CNV multiply(PA_quaternion_f32 b, PA_matrix2x2_f32 a) noexcept
    {

        return F_matrix2x2_f32(
            b * a.a,
            b * a.b
        );
    }

    NCPP_FORCE_INLINE F_matrix3x3_f32 NMATH_CALL_CNV multiply(PA_quaternion_f32 b, PA_matrix3x3_f32 a) noexcept
    {

        return F_matrix3x3_f32(
            b * a.a,
            b * a.b,
            b * a.c
        );
    }

    NCPP_FORCE_INLINE F_matrix4x4_f32 NMATH_CALL_CNV multiply(PA_quaternion_f32 b, PA_matrix4x4_f32 a) noexcept
    {

        return F_matrix4x4_f32(
            b * a.a,
            b * a.b,
            b * a.c,
            b * a.d
        );
    }
    
}

NMATH_DEFINE_MULTIPLY_OPERATOR(nmath::PA_quaternion_f32, nmath::PA_matrix2x2_f32, nmath::F_matrix2x2_f32);

NMATH_DEFINE_MULTIPLY_OPERATOR(nmath::PA_quaternion_f32, nmath::PA_matrix3x3_f32, nmath::F_matrix3x3_f32);

NMATH_DEFINE_MULTIPLY_OPERATOR(nmath::PA_quaternion_f32, nmath::PA_matrix4x4_f32, nmath::F_matrix4x4_f32);