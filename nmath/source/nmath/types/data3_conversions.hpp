#pragma once

/** @file nmath/types/data3_conversions.hpp
*
*   Implement data3 conversions.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/types/data3_f32.hpp>
#include <nmath/types/data3_i32.hpp>
#include <nmath/types/data3_u32.hpp>

#pragma endregion



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



namespace nmath {

	NMATH_USING_NLIB_NAMESPACES();



NCPP_DISABLE_ALL_WARNINGS_PUSH
#ifdef NCPP_ENABLE_SSE4
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<f32, F_flag__>::TF_data3(TF_data3<i32, F_flag__> o) noexcept :
		xyz_(_mm_cvtepi32_ps(o.xyz_))
	{}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<f32, F_flag__>::TF_data3(const TF_data3<i32, F_flag__>& o) noexcept :
		x(o.x),
		y(o.y),
		z(o.z)
	{}
#endif
#ifdef NCPP_ENABLE_SSE2
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<f32, F_flag__>::TF_data3(TF_data3<u32, F_flag__> o) noexcept :
		xyz_(_mm_cvtepu32_ps(o.xyz_))
	{}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<f32, F_flag__>::TF_data3(const TF_data3<u32, F_flag__>& o) noexcept :
		x(o.x),
		y(o.y),
		z(o.z)
	{}
#endif

#ifdef NCPP_ENABLE_SSE4
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<f32, F_flag__>& TF_data3<f32, F_flag__>::operator = (TF_data3<i32, F_flag__> o) noexcept {

		xyz_ = _mm_cvtepi32_ps(o.xyz_);

		return *this;
	}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<f32, F_flag__>& TF_data3<f32, F_flag__>::operator = (const TF_data3<i32, F_flag__>& o) noexcept {

		x = o.x;
		y = o.y;
		z = o.z;

		return *this;
	}
#endif
#ifdef NCPP_ENABLE_SSE2
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<f32, F_flag__>& TF_data3<f32, F_flag__>::operator = (TF_data3<u32, F_flag__> o) noexcept {

		xyz_ = _mm_cvtepu32_ps(o.xyz_);

		return *this;
	}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<f32, F_flag__>& TF_data3<f32, F_flag__>::operator = (const TF_data3<u32, F_flag__>& o) noexcept {

		x = o.x;
		y = o.y;
		z = o.z;

		return *this;
	}
#endif

#ifdef NCPP_ENABLE_SSE
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<i32, F_flag__>::TF_data3(TF_data3<f32, F_flag__> o) noexcept :
		xyz_(
			_mm_cvttps_epi32(o.xyz_)
		)
	{}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<i32, F_flag__>::TF_data3(const TF_data3<f32, F_flag__>& o) noexcept :
		x(o.x),
		y(o.y),
		z(o.z)
	{}
#endif
#ifdef NCPP_ENABLE_SSE2
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<i32, F_flag__>::TF_data3(TF_data3<u32, F_flag__> o) noexcept :
		xyz_(o.xyz_)
	{}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<i32, F_flag__>::TF_data3(const TF_data3<u32, F_flag__>& o) noexcept :
		x(o.x),
		y(o.y),
		z(o.z)
	{}
#endif

#ifdef NCPP_ENABLE_SSE
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<i32, F_flag__>& TF_data3<i32, F_flag__>::operator = (TF_data3<f32, F_flag__> o) noexcept {

		xyz_ = _mm_cvttps_epi32(o.xyz_);

		return *this;
	}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<i32, F_flag__>& TF_data3<i32, F_flag__>::operator = (const TF_data3<f32, F_flag__>& o) noexcept {

		x = o.x;
		y = o.y;
		z = o.z;

		return *this;
	}
#endif
#ifdef NCPP_ENABLE_SSE2
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<i32, F_flag__>& TF_data3<i32, F_flag__>::operator = (TF_data3<u32, F_flag__> o) noexcept {

		xyz_ = o.xyz_;

		return *this;
	}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<i32, F_flag__>& TF_data3<i32, F_flag__>::operator = (const TF_data3<u32, F_flag__>& o) noexcept {

		x = o.x;
		y = o.y;
		z = o.z;

		return *this;
	}
#endif

#ifdef NCPP_ENABLE_SSE
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<u32, F_flag__>::TF_data3(TF_data3<f32, F_flag__> o) noexcept :
		xyz_(
			_mm_cvttps_epi32(o.xyz_)
		)
	{}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<u32, F_flag__>::TF_data3(const TF_data3<f32, F_flag__>& o) noexcept :
		x(o.x),
		y(o.y),
		z(o.z)
	{}
#endif
#ifdef NCPP_ENABLE_SSE4
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<u32, F_flag__>::TF_data3(TF_data3<i32, F_flag__> o) noexcept :
		xyz_(o.xyz_)
	{}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<u32, F_flag__>::TF_data3(const TF_data3<i32, F_flag__>& o) noexcept :
		x(o.x),
		y(o.y),
		z(o.z)
	{}
#endif

#ifdef NCPP_ENABLE_SSE
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<u32, F_flag__>& TF_data3<u32, F_flag__>::operator = (TF_data3<f32, F_flag__> o) noexcept {

		xyz_ = _mm_cvttps_epi32(o.xyz_);

		return *this;
	}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<u32, F_flag__>& TF_data3<u32, F_flag__>::operator = (const TF_data3<f32, F_flag__>& o) noexcept {

		x = o.x;
		y = o.y;
		z = o.z;

		return *this;
	}
#endif
#ifdef NCPP_ENABLE_SSE4
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<u32, F_flag__>& TF_data3<u32, F_flag__>::operator = (TF_data3<i32, F_flag__> o) noexcept {

		xyz_ = o.xyz_;

		return *this;
	}
#else
	template<typename F_flag__>
	NCPP_FORCE_INLINE TF_data3<u32, F_flag__>& TF_data3<u32, F_flag__>::operator = (const TF_data3<i32, F_flag__>& o) noexcept {

		x = o.x;
		y = o.y;
		z = o.z;

		return *this;
	}
#endif
NCPP_DISABLE_ALL_WARNINGS_POP

}
