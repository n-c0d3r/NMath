#pragma once

/** @file nmath/types/box.hpp
*
*   Implement box.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/prerequisites.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/types/range.hpp>

#pragma endregion



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



namespace nmath {

    template<typename F_element__ = NMATH_DEFAULT_FP_TYPE>
    class TF_box : public TF_range<TF_vector3<F_element__>>
    {
    private:
        using F_base = TF_range<TF_vector3<F_element__>>;



    public:
        using typename F_base::F_value;
        using typename F_base::PA_value;

        using F_base::max;
        using F_base::min;

    public:
        using F_element = F_element__;



    public:
        NCPP_FORCE_INLINE TF_box() noexcept = default;
        NCPP_FORCE_INLINE TF_box(PA_value min, PA_value max) noexcept :
            TF_range<TF_vector3<F_element__>>(min, max)
        {}
        NCPP_FORCE_INLINE TF_box(const TF_box& x) noexcept :
            TF_range<TF_vector3<F_element__>>(x.min, x.max)
        {}
        NCPP_FORCE_INLINE TF_box& operator = (const TF_box& x) noexcept {

            ((TF_range<TF_vector3<F_element__>>&)*this) = x;

            return *this;
        }

    public:
        F_element volume() const noexcept {

            F_value delta = max - min;
            return length(delta);
        }
        F_element volume_sq() const noexcept {

            F_value delta = max - min;
            return dot(delta, delta);
        }

    public:
        TG_array<F_value, 6> corners() const noexcept {

            return {
                { min.x, min.y, min.z },
                { min.x, min.y, max.z },
                { min.x, max.y, max.z },
                { max.x, max.y, max.z },
                { max.x, max.y, min.z },
                { max.x, min.y, min.z }
            };
        }
    };



    using F_box = TF_box<>;

    using F_box_f32 = TF_box<f32>;
    using F_box_i32 = TF_box<i32>;
    using F_box_u32 = TF_box<u32>;
}
