#pragma once

/** @file nmath/types/data_helper.hpp
*
*   Implement data helper.
*/



 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/prerequisites.hpp>

#pragma endregion



namespace nmath {

    NMATH_USING_NLIB_NAMESPACES();



    template<typename F_data_or_PA_data__>
    using TF_data_cast = std::remove_const_t<std::remove_reference_t<F_data_or_PA_data__>>;
    template<typename F_data_or_PA_data__>
    using TPA_data_cast = typename TF_data_cast<F_data_or_PA_data__>::F_passed_argument;
    template<typename F_data_or_PA_data__>
    using TF_entry_cast = typename TF_data_cast<F_data_or_PA_data__>::F_entry;
    template<typename F_data_or_PA_data__>
    using TF_pack_cast = typename TF_data_cast<F_data_or_PA_data__>::F_pack;
    template<typename F_data_or_PA_data__>
    using TPA_pack_cast = typename TF_data_cast<F_data_or_PA_data__>::PA_pack;
    template<typename F_data_or_PA_data__>
    static constexpr u32 T_entry_count_cast = TF_data_cast<F_data_or_PA_data__>::entry_count_s;
    template<typename F_data_or_PA_data__>
    static constexpr u32 T_pack_count_cast = TF_data_cast<F_data_or_PA_data__>::pack_count_s;



#define NMATH_DATA2_F32_PA(T) const T&

#ifdef NCPP_ENABLE_SSE
#define NMATH_DATA3_F32_PA(T) const T
#define NMATH_DATA4_F32_PA(T) const T
#else
#define NMATH_DATA3_F32_PA(T) const T&
#define NMATH_DATA4_F32_PA(T) const T&
#endif

#define NMATH_DATA4X4_F32_PA(T) const T&

}
