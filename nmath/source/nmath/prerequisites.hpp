#pragma once

/** @file nmath/prerequisites.hpp
*   @brief The file that is always included on the top.
*
*   Includes required headers,...
*/



 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



namespace nmath {}



 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/version.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/config.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <ncpp/.hpp>

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#define NMATH_USING_NLIB_NAMESPACES() \
	using namespace ncpp;

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#ifdef NCPP_ENABLE_SIMD
#define NMATH_CALL_CNV NCPP_VECTOR_CALL
#else 
#define NMATH_CALL_CNV NCPP_FAST_CALL
#endif

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

namespace nmath {

    NMATH_USING_NLIB_NAMESPACES();

    inline f32 reinterpret_cast_i32_to_f32(i32 a) noexcept {

        union {
            f32 f;
            i32 i;
        } temp;

        temp.i = a;

        return temp.f;
    }
    inline f32 reinterpret_cast_u32_to_f32(u32 a) noexcept {

        union {
            f32 f;
            u32 u;
        } temp;

        temp.u = a;

        return temp.f;
    }

}

#define NMATH_F32_ONE 1.0f
#define NMATH_F32_ONE_NEGATIVE -1.0f
#define NMATH_F32_ZERO 0.0f
#define NMATH_F32_FULL ::nmath::reinterpret_cast_u32_to_f32(NCPP_U32_MAX)

#define NMATH_I32_ONE 1
#define NMATH_I32_ONE_NEGATIVE -1
#define NMATH_I32_ZERO 0
#define NMATH_I32_FULL NCPP_U32_MAX

#define NMATH_U32_ONE 1
#define NMATH_U32_ZERO 0
#define NMATH_U32_FULL NCPP_U32_MAX

#define NMATH_DEFAULT_TOLERANCE_F32 (0.00001f)

#define NMATH_F32_INFINITY (std::numeric_limits<ncpp::f32>::infinity())
#define NMATH_F64_INFINITY (std::numeric_limits<ncpp::f64>::infinity())

#define NMATH_F32_NEGATIVE_INFINITY (-std::numeric_limits<ncpp::f32>::infinity())
#define NMATH_F64_NEGATIVE_INFINITY (-std::numeric_limits<ncpp::f64>::infinity())

#define NMATH_F32_PI (3.14159265358979323846f)
#define NMATH_F64_PI (3.141592653589793238462643383279502884)

#define NMATH_F32_HALF_PI (NMATH_F32_PI * 0.5f)
#define NMATH_F64_HALF_PI (NMATH_F64_PI * 0.5)

#define NMATH_F32_TWO_PI (NMATH_F32_PI * 2.0f)
#define NMATH_F64_TWO_PI (NMATH_F64_PI * 2.0)

#define NMATH_F32_HALF (0.5f)
#define NMATH_F64_HALF (0.5)

#define NMATH_F32_INV_PI (1.0f / 3.14159265358979323846f)
#define NMATH_F64_INV_PI (1.0 / 3.141592653589793238462643383279502884)

#define NMATH_F32_INV_HALF_PI (NMATH_F32_INV_PI / 0.5f)
#define NMATH_F64_INV_HALF_PI (NMATH_F64_INV_PI / 0.5)

#define NMATH_F32_INV_TWO_PI (NMATH_F32_INV_PI / 2.0f)
#define NMATH_F64_INV_TWO_PI (NMATH_F64_INV_PI / 2.0)

#define NMATH_F32_INV_HALF (1.0f / 0.5f)
#define NMATH_F64_INV_HALF (1.0 / 0.5)

#define NMATH_F32_NEGATIVE_PI (-3.14159265358979323846f)
#define NMATH_F64_NEGATIVE_PI (-3.141592653589793238462643383279502884)

#define NMATH_F32_NEGATIVE_HALF_PI (-NMATH_F32_PI * 0.5f)
#define NMATH_F64_NEGATIVE_HALF_PI (-NMATH_F64_PI * 0.5)

#define NMATH_F32_NEGATIVE_TWO_PI (-NMATH_F32_PI * 2.0f)
#define NMATH_F64_NEGATIVE_TWO_PI (-NMATH_F64_PI * 2.0)

#define NMATH_F32_NEGATIVE_HALF (-0.5f)
#define NMATH_F64_NEGATIVE_HALF (-0.5)

#define NMATH_F32_INV_NEGATIVE_PI (-1.0f / 3.14159265358979323846f)
#define NMATH_F64_INV_NEGATIVE_PI (-1.0 / 3.141592653589793238462643383279502884)

#define NMATH_F32_INV_NEGATIVE_HALF_PI (-NMATH_F32_INV_PI / 0.5f)
#define NMATH_F64_INV_NEGATIVE_HALF_PI (-NMATH_F64_INV_PI / 0.5)

#define NMATH_F32_INV_NEGATIVE_TWO_PI (-NMATH_F32_INV_PI / 2.0f)
#define NMATH_F64_INV_NEGATIVE_TWO_PI (-NMATH_F64_INV_PI / 2.0)

#define NMATH_F32_INV_NEGATIVE_HALF (-1.0f / 0.5f)
#define NMATH_F64_INV_NEGATIVE_HALF (-1.0 / 0.5)

////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////

#include <nmath/simd_macros.hpp>

#pragma endregion



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



namespace nmath {

	using F_fp = NMATH_DEFAULT_FP_TYPE;
	using F_int = NMATH_DEFAULT_INT_TYPE;

}
